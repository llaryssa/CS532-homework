{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fmodern\fcharset0 CourierNewPSMT;
}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww16040\viewh10440\viewkind0
\deftab720
\pard\pardeftab720\sa20\qc

\f0\b\fs24 \cf0 \expnd0\expndtw0\kerning0
CS 532: Homework Assignment 2
\b0 \
Prof. Philippos Mordohai\uc0\u8232 Department of Computer Science \
Stevens Institute of Technology \
Philippos.Mordohai@stevens.edu \
\pard\pardeftab720\sa20

\b \cf0 \
Student: 
\b0 Alana Laryssa S A Santos (aseabrad@stevens.edu)
\fs26 \

\b\fs32 \

\fs24 Problem 1
\fs32 \

\b0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\qc

\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 {{\NeXTGraphic disp33.png \width9040 \height7520
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\qc
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\qc

\fs22 \cf0 3x3 SAD window. Error rate = 49.71%
\fs32 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\qc
\cf0 {{\NeXTGraphic disp1515.png \width9000 \height7520
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\qc

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\qc

\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 15x15 SAD window. Error rate = 27.60%
\fs32 \
\
\pard\pardeftab720\sa20

\f0\b\fs26 \cf0 \expnd0\expndtw0\kerning0
Problem 2
\fs32 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f1\b0\fs22 \cf0 \kerning1\expnd0\expndtw0 When computing the PKRN values, some of the pixels gave NaN and Inf results. These were ignored in the evaluation. So, out of 168750 pixels in the original disparity map, only 168670 had good PKRN values. Thus, the sparse disparity map computed using the 50% most confident pixels has 84335 pixels. And the error rate was 36.59%.
\f0\fs24 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sa20

\b\fs26 \cf0 \expnd0\expndtw0\kerning0
CODE (MatLab)\
\

\f2\b0 %% Inicialization\
\
min_disp = 0;\
max_disp = 63;\
rank = 5;\
window = 3;\
% window = 15;\
\
lft = imread('teddyL.pgm');\
rgt = imread('teddyR.pgm');\
\
height = size(lft, 1);\
width  = size(lft, 2);\
\
%% Rank transform\
\
rnklft = zeros(size(lft));\
rnkrgt = zeros(size(rgt));\
half_rnk = (rank-1)/2;\
\
for i = 1:height\
    for j = 1:width  % all pixels       \
        lims = [max(1,i-half_rnk); min(height, i+half_rnk);\
               max(1,j-half_rnk); min(width, j+half_rnk)];\
        lftwin = double(lft(lims(1):lims(2), lims(3):lims(4)));\
        rnklft(i,j) = sum(sum(lftwin < lft(i,j)));\
        \
        rgtwin = double(rgt(lims(1):lims(2), lims(3):lims(4)));\
        rnkrgt(i,j) = sum(sum(rgtwin < rgt(i,j)));\
    end\
end\
\
disp('Rank transformed');\
\
%% SAD stereo matching\
\
half_win = (window-1)/2;\
disparity = inf(size(lft));\
pkrn = inf(size(lft,1)*size(lft,2), 3);\
count = 1;\
\
for i = 1:height\
    for j = 1:width  % all pixels\
       curr_min_disp = inf(1,max_disp-min_disp+1);\
       for d = min_disp:max_disp  % all disparities\
           if (j+half_win-d) > 0\
               lims = [max(1,i-half_win); min(height, i+half_win);\
                       max(1,j-half_win); min(width, j+half_win);\
                       max(1,j-half_win-d); min(width, j+half_win-d)];\
                offs = min(lims(6) - lims(5), lims(4) - lims(3));\
                sumwin = sum(sum( ...\
                   abs(double(rnklft(lims(1):lims(2), lims(3):lims(3)+offs)) - ...\
                       double(rnkrgt(lims(1):lims(2), lims(5):lims(5)+offs)) ...\
                         )));\
                curr_min_disp(d+1) = sumwin;\
           else\
               break; % exit the for loop\
           end\
       end\
       [c1, idx] = min(curr_min_disp);\
       curr_min_disp(idx) = [];\
       [c2, ~] = min(curr_min_disp);\
       disparity(i,j) = idx-1;\
       pkrn(count, :) = [c2/c1 i j];\
       \
       count = count+1;\
        \
    end\
end\
\
%% Computing errors\
\
disparity = double(disparity);\
gt = imread('disp2.pgm');\
gt = double(gt)./4;\
erro = sum(sum(abs(gt - disparity) > 1)) / ...\
       (size(lft,1)*size(lft,2))\
   \
figure, imshow(disparity, [min_disp max_disp]);\
\
%% PKRN error\
\
pkrn = sortrows(pkrn);\
pkrn(isinf(pkrn(:,1)), :) = [];\
pkrn(isnan(pkrn(:,1)), :) = [];\
pkrn = pkrn(length(pkrn)/2:end, :);\
\
idx = false(size(lft));\
\
for k = 1:length(pkrn)\
   idx(pkrn(k,2), pkrn(k,3)) = true; \
end\
\
erro2 = sum(sum(abs(gt(idx) - disparity(idx)) > 1)) / sum(sum(idx))\
\pard\pardeftab720\sa20

\fs24 \cf0 \expnd0\expndtw0\kerning0
\
}